name: Tests

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "news/**"
      - "*.md"
      - Dockerfile
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "news/**"
      - "*.md"
      - Dockerfile

jobs:
  Testing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64]
        include:
          - python-version: 3.8
            os: windows-latest
            arch: x86

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Set Variables
        id: set_variables
        run: |
          echo "::set-output name=PY::$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')"
          echo "::set-output name=PIP_CACHE::$(pip cache dir)"
      - name: Fix Ubuntu Env
        run: |
          echo "LD_PRELOAD=/lib/x86_64-linux-gnu/libgcc_s.so.1" >> $GITHUB_ENV
        if: runner.os == 'Linux'
      - name: Cache PIP
        uses: actions/cache@v2
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: ${{ runner.os }}-pip-${{ steps.set_variables.outputs.PY }}
      - name: Install Current PDM
        run: |
          python -m pip install -U .
      - name: Install Dev Dependencies
        run: |
          pdm config parallel_install true
          pdm install -dvv
      - name: Run Tests
        run: pdm run pytest -n auto tests
