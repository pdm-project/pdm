name: Tests

on:
  pull_request:
    branches:
      - main
      - dev
      - "1.x"
    paths-ignore:
      - "docs/**"
      - "news/**"
      - "*.md"
      - Dockerfile
      - tasks/benchmarks/**
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - "docs/**"
      - "news/**"
      - "*.md"
      - Dockerfile
      - tasks/benchmarks/**

concurrency:
  group: ${{ github.event.number || github.run_id }}
  cancel-in-progress: true

jobs:
  Testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11.0-alpha - 3.11.0"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        install-via: [pip]
        arch: [x64]
        include:
          - python-version: 3.9
            os: ubuntu-latest
            install-via: script
            arch: x64
          - python-version: 3.9
            os: windows-latest
            install-via: pip
            arch: x86
    continue-on-error: ${{ startsWith(matrix.python-version, '3.11') }}
    steps:
      - uses: actions/checkout@v3

      - name: Set Python 3.6
        uses: actions/setup-python@v3
        with:
          python-version: 3.6
          architecture: ${{ matrix.arch }}
      - name: Set Python 3.7
        uses: actions/setup-python@v3
        if: matrix.python-version != '3.7'
        with:
          python-version: 3.7
          architecture: ${{ matrix.arch }}
      - name: Set Python 3.8
        uses: actions/setup-python@v3
        if: matrix.python-version != '3.8'
        with:
          python-version: 3.8
          architecture: ${{ matrix.arch }}
      - name: Set Python 3.9
        uses: actions/setup-python@v3
        if: matrix.python-version != '3.9'
        with:
          python-version: 3.9
          architecture: ${{ matrix.arch }}
      - name: Set Python 3.10
        uses: actions/setup-python@v2
        if: matrix.python-version != '3.10'
        with:
          python-version: "3.10"
          architecture: ${{ matrix.arch }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Set Variables
        id: set_variables
        run: |
          echo "::set-output name=PY::$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')"
          echo "::set-output name=PIP_CACHE::$(pip cache dir)"
      - name: Cache PIP
        uses: actions/cache@v2
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: ${{ runner.os }}-pip-${{ steps.set_variables.outputs.PY }}
      - name: Install current PDM via pip
        if: matrix.install-via == 'pip'
        run: python -m pip install -U .
      - name: Install current PDM via script
        if: matrix.install-via == 'script'
        run: |
          python -m pip install click
          python install-pdm.py --version head
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install Dev Dependencies
        run: |
          pdm install -v -dGtest
          pdm info
      - name: Run Tests
        run: pdm run pytest -n auto --cov=pdm --cov-config=setup.cfg --cov-report=xml tests
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
